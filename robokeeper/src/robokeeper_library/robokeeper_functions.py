'''
Collection of functions that are useful for the robokeeper
'''
import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt
from bagpy import bagreader
import pandas as pd

def traj_linear_reg(x_train, y_train, x_goal):
    '''Predicts the y position of the ball when it crosses the goal line by fitting
    a line to the first few xy-positions of the ball

    Args:
        x_train (list): x coordinate training data
        y_train (list): y coordinate training data
        x_goal (float): position of the goal on the x-axis

    Returns:
        y_predict (float): predicted y postion of the ball when it crosses the goal
    '''
    # Format the input data for the linear regression model function
    x_train = np.array([x_train]).T
    y_train = np.array(y_train)

    # Compute linear regression model
    reg = linear_model.LinearRegression()
    reg.fit(x_train, y_train)
    intercept = reg.intercept_
    slope = reg.coef_

    # Now make the prediction
    y_predict = intercept + slope*x_goal

    return y_predict[0]

def joint_lookup_table(y_pos):
    '''
    Using the dictionary defined below, this function returns the joint angles that would result in
    the end effector being positioned at the y-coord 'y_pos' along the goal plane

    Args:
        y_pos (float): desired y-coord along the goal plane

    Returns:
        list of joint angles [joint1, ..., joint6] that would accomplish moving the end effector to the desired y-coord
    '''
    lookup_dict = {
    0.25: [-2.7436083674161664, 1.1213741775684751, 2.8893409896719873, -0.4862867500536342, 0.6657679795686979, 1.6575168247096268, 0.10124582177772824],
    0.24: [-2.7566476020390556, 1.1167720947603965, 2.9062152933016088, -0.4732475154307449, 0.6580978415552337, 1.6567498109082803, 0.10124582177772824],
    0.23: [-2.770453850463291, 1.112170011952318, 2.9238566107325763, -0.4594412670065093, 0.6473596483363836, 1.659817866113666, 0.10124582177772824],
    0.22: [-2.7850271126888733, 1.1075679291442395, 2.9391968867595053, -0.44486800478092714, 0.638922496521573, 1.659817866113666, 0.10124582177772824],
    0.21: [-2.7980663473117624, 1.102965846336161, 2.9560711903891264, -0.43106175635669153, 0.6304853447067623, 1.661351893716359, 0.10124582177772824],
    0.20: [-2.813406623338691, 1.0991307773294285, 2.9729454940187474, -0.4180225217338022, 0.6189801376865659, 1.6644199489217448, 0.10124582177772824],
    0.19: [-2.827979885564273, 1.096062722124043, 2.985984728641637, -0.4034492595082202, 0.6120770134744481, 1.6651869627230913, 0.10124582177772824],
    0.18: [-2.8425531477898556, 1.090693625514618, 3.002092018469912, -0.3850409282759059, 0.5998047926529053, 1.6651869627230913, 0.10124582177772824],
    0.17: [-2.856359396214091, 1.0899266117132715, 3.0158982668941476, -0.368933638447631, 0.5913676408380946, 1.6605848799150125, 0.10124582177772824],
    0.16: [-2.8716996722410193, 1.0860915427065394, 3.0304715291197297, -0.35666141762608816, 0.5821634752219375, 1.6651869627230913, 0.10124582177772824],
    0.15: [-2.885505920665255, 1.0837905013025002, 3.0442777775439653, -0.33595204498973463, 0.5729593096057803, 1.6575168247096268, 0.10047880797638183],
    0.14: [-2.902380224294877, 1.0807224460971143, 3.0588510397695474, -0.32137878276415255, 0.5614541025855839, 1.6605848799150125, 0.10124582177772824],
    0.13: [-2.9161864727191125, 1.079955432295768, 3.07112326059109, -0.3022034377304919, 0.5522499369694268, 1.6567498109082803, 0.10124582177772824],
    0.12: [-2.9315267487460406, 1.0776543908917289, 3.0818614538099403, -0.28149406509413843, 0.5445797989559626, 1.6513807142988557, 0.10124582177772824],
    0.11: [-2.946867024772969, 1.0761203632890357, 3.0933666608301364, -0.2638527476631706, 0.5361426471411519, 1.6483126590934696, 0.10124582177772824],
    0.10: [-2.964508342203937, 1.0738193218849965, 3.1041048540489866, -0.2431433750268171, 0.5261714677236483, 1.645244603888084, 0.10124582177772824],
    0.09: [-2.980615632032212, 1.0738193218849965, 3.1179111024732222, -0.22473504379450288, 0.5154332745047984, 1.6421765486826985, 0.10124582177772824],
    0.08: [-3.377767061073243, 1.0730261845199482, 3.382909387318758, -16.03344451548014, -0.2976000455554649, -0.7838881049760476, 0.1380624842423567],
    0.07: [-3.012830211688762, 1.0722852942823038, 3.137086447506883, -0.1794812295150637, 0.49932598467652345, 1.629137314059809, 0.10124582177772824],
    0.06: [-3.027403473914344, 1.070751266679611, 3.147824640725733, -0.1526357464679388, 0.48858779145767345, 1.6176321070396127, 0.10124582177772824],
    0.05: [-3.0442777775439653, 1.0715182804809573, 3.15702880634189, -0.129625332427546, 0.4801506396428628, 1.609194955224802, 0.10124582177772824],
    0.04: [-3.0611520811735864, 1.0715182804809573, 3.166232971958047, -0.10891595979119251, 0.47017946022535917, 1.6061269000194163, 0.10124582177772824],
    0.03: [-3.077259371001862, 1.0715182804809573, 3.17620415137555, -0.08053644914137474, 0.4617423084105486, 1.5915536377938344, 0.10124582177772824],
    0.02: [-3.094133674631483, 1.0722852942823038, 3.185408316991708, -0.05369096609424983, 0.45177112899304495, 1.5808154445749842, 0.10124582177772824],
    0.01: [-3.1125420058637974, 1.0738193218849965, 3.191544427402479, -0.026845483047124915, 0.44486800478092714, 1.5700772513561343, 0.10124582177772824],
    0.00: [-3.1294163094934184, 1.0738193218849965, 3.200748593018636, 0.0015340276026928523, 0.4348968253634236, 1.5555039891305522, 0.10124582177772824],
    -0.01: [-3.1470576269243864, 1.0753533494876895, 3.207651717230754, 0.02991353825251062, 0.42492564594592014, 1.5432317683090095, 0.10124582177772824],
    -0.02: [-3.166232971958047, 1.0761203632890357, 3.214554841442872, 0.05752603510098196, 0.4172555079324558, 1.5340276026928523, 0.10124582177772824],
    -0.03: [-3.183874289389015, 1.0784214046930751, 3.219923938052297, 0.09050762855887828, 0.4126534251243773, 1.5179203128645773, 0.10124582177772824],
    -0.04: [-3.2015156068199824, 1.0807224460971143, 3.2252930346617217, 0.1234892220167746, 0.4026822457068737, 1.501046009234956, 0.10124582177772824],
    -0.05: [-3.219923938052297, 1.0822564736998073, 3.2352642140792254, 0.1618399120840959, 0.3919440524880238, 1.4780355951945632, 0.10124582177772824],
    -0.06: [-3.2383322692846113, 1.0837905013025002, 3.2398662968873038, 0.19175345033660654, 0.38810898348129164, 1.4657633743730203, 0.10124582177772824],
    -0.07: [-3.2567406005169257, 1.0860915427065394, 3.246002407298075, 0.2308711542052743, 0.3781378040637881, 1.4427529603326275, 0.10124582177772824],
    -0.08: [-3.2766829593519327, 1.0883925841105786, 3.2513715039075, 0.26768781666990277, 0.3720016936530167, 1.4228106014976205, 0.10124582177772824],
    -0.09: [-3.2950912905842467, 1.090693625514618, 3.259808655722311, 0.311407603346649, 0.3612635004341667, 1.3936640770464563, 0.10124582177772824],
    -0.10: [-3.314266635617907, 1.0937616807200037, 3.2628767109276966, 0.3520593348180096, 0.3574284314274346, 1.372954704410103, 0.10124582177772824],
    -0.11: [-3.3342089944529145, 1.0968297359253893, 3.2674787937357754, 0.3973131490974488, 0.3489912796126239, 1.3422741523562458, 0.10124582177772824],
    -0.12: [-3.354151353287922, 1.0991307773294285, 3.2697798351398144, 0.43643085296611644, 0.34669023820858463, 1.3230988073225851, 0.101245821777728243],
    -0.13: [-3.375627739725622, 1.101431818733468, 3.2782169869546256, 0.49242286046440564, 0.3344180173870418, 1.283214089652571, 0.10124582177772824],
    -0.14: [-3.3963371123619748, 1.1052668877402, 3.281285042160011, 0.5415117437505769, 0.33058294838030966, 1.2540675652014066, 0.10124582177772824],
    -0.15: [-3.417046484998328, 1.1091019567469322, 3.284353097365397, 0.5898336132354016, 0.3282819069762704, 1.2233870131475497, 0.10124582177772824],
    -0.16: [-3.437755857634682, 1.1114029981509714, 3.2820520559613575, 0.6266502757000302, 0.3282819069762704, 1.204211668113889, 0.10124582177772824],
    -0.17: [-3.4599992578737284, 1.11600508095905, 3.290489207776168, 0.6918464488144764, 0.32137878276415255, 1.1581908400331036, 0.10124582177772824],
    -0.18: [-3.4799416167087354, 1.1198401499657822, 3.284353097365397, 0.7209929732656406, 0.3252138517708847, 1.1459186192115607, 0.10124582177772824],
    -0.19: [-3.5014180031464357, 1.1236752189725143, 3.282819069762704, 0.7662467875450797, 0.32444683796953827, 1.1198401499657822, 0.10124582177772824],
    -0.20: [-3.5205933481800957, 1.128277301780593, 3.2759159455505857, 0.8015294224070154, 0.3282819069762704, 1.1006648049321215, 0.10124582177772824],
    -0.21: [-3.542836748419142, 1.132112370787325, 3.2797510145573185, 0.8628905265147294, 0.32444683796953827, 1.0607800872621074, 0.10124582177772824],
    -0.22: [-3.562012093452803, 1.1367144535954035, 3.2736149041465463, 0.8981731613766649, 0.3282819069762704, 1.0416047422284467, 0.10124582177772824],
    -0.23: [-3.5788863970824245, 1.141316536403482, 3.258274628119618, 0.9112123959995543, 0.3367190587910811, 1.0446727974338323, 0.10124582177772824],
    -0.24: [-3.597294728314739, 1.1466856330129072, 3.249837476304807, 0.939591906649372, 0.3428551692018525, 1.0316335628109432, 0.10124582177772824],
    -0.25: [-3.6157030595470525, 1.152054729622332, 3.242167338291343, 0.9748745415113076, 0.34669023820858463, 1.011691203975936, 0.10124582177772824]
    }

    y_pos_cm = round(y_pos, 2)
    if y_pos_cm > 0.25:
        return lookup_dict[0.25]
    elif  y_pos_cm < -0.25:
        return lookup_dict[-0.25]
    return lookup_dict[y_pos_cm]

def get_rosbag_data():
    '''
    Extracts position data stored in a rosbag file

    Only needed for testing
    '''
    bag = bagreader('subset_second.bag')
    data_rosbag = bag.message_by_topic('/Goalie_coord')
    data = pd.read_csv(data_rosbag)
    return data

def main():
    '''
    Main is just used to test and debug the above functions
    '''
    data = get_rosbag_data().to_numpy()
    x_data = data[:, 1]
    y_data = data[:, 2]

    n = 10
    x_train = x_data[0:n]
    y_train = y_data[0:n]

    x_goal = -1.27  # As of Nov 21, 8pm
    y_predict = traj_linear_reg(x_train, y_train, x_goal)

    joint_lookup_table(y_predict)

if __name__ == '__main__':
    main()
