'''
Collection of functions that are useful for the robokeeper
'''
import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt
from bagpy import bagreader
import pandas as pd

def traj_linear_reg(x_train, y_train, x_goal):
    '''Predicts the y position of the ball when it crosses the goal line by fitting
    a line to the first few xy-positions of the ball

    Args:
        x_train (list): x coordinate training data
        y_train (list): y coordinate training data
        x_goal (float): position of the goal on the x-axis

    Returns:
        y_predict (float): predicted y postion of the ball when it crosses the goal
    '''
    # Format the input data for the linear regression model function
    x_train = np.array([x_train]).T
    y_train = np.array(y_train)

    # Compute linear regression model
    reg = linear_model.LinearRegression()
    reg.fit(x_train, y_train)
    intercept = reg.intercept_
    slope = reg.coef_

    # Now make the prediction
    y_predict = intercept + slope*x_goal

    return y_predict[0]

def joint_lookup_table(y_pos):
    '''
    Using the dictionary defined below, this function returns the joint angles that would result in
    the end effector being positioned at the y-coord 'y_pos' along the goal plane

    Args:
        y_pos (float): desired y-coord along the goal plane

    Returns:
        list of joint angles [joint1, ..., joint6] that would accomplish moving the end effector to the desired y-coord
    '''
    lookup_dict = {
        0.25: [0.7746839393598904, -1.112170011952318, -0.22166698858911718, 0.0, -0.2347062232120064, -2.345528204517371, 0.1380624842423567],
        0.24: [0.7539745667235369, -1.1021988325348144, -0.2615517062591313, 0.0, -0.2055596987608422, -2.3248188318810175, 0.1380624842423567],
        0.23: [0.732498180285837, -1.09452869452135, -0.29760135492241335, 0.0, -0.176413174309678, -2.304109459244664, 0.1380624842423567],
        0.22: [0.711021793848137, -1.0876255703092321, -0.33288398978434897, 0.0, -0.14803366365986023, -2.281099045204271, 0.1380624842423567],
        0.21: [0.6880113798077442, -1.079955432295768, -0.3681666246462845, 0.0, -0.11965415301004248, -2.258855644965225, 0.1380624842423567],
        0.20: [0.6634669381646586, -1.0753533494876895, -0.399614190501488, 0.0, -0.09280866996291756, -2.2343112033221395, 0.1380624842423567],
        0.19: [0.6373884689188801, -1.069217239076918, -0.43106175635669153, 0.0, -0.0674972145184855, -2.2089997478777073, 0.1380624842423567],
        0.18: [0.6120770134744481, -1.0646151562688395, -0.4617423084105486, 0.0, -0.04141874527270701, -2.1844553062346215, 0.1380624842423567],
        0.17: [0.5852315304273231, -1.0607800872621074, -0.49012181906036634, 0.002301041, -0.0176413174309678, -2.1591438507901897, 0.1380624842423567],
        0.16: [0.5568520197775054, -1.0584790458580682, -0.5092971640940269, 0.029146524451164193, -0.0015340276026928523, -2.1576098231874967, 0.1380624842423567],
        0.15: [0.5292395229290341, -1.0584790458580682, -0.5108311916967199, 0.10891595979119251, 0.0, -2.2089997478777073, 0.1380624842423567],
        0.14: [0.5008600122792163, -1.0584790458580682, -0.5100641778953734, 0.1879183813298744, 0.0, -2.2611566863692643, 0.1380624842423567],
        0.13: [0.47401452923209136, -1.0584790458580682, -0.5108311916967199, 0.2661537890672099, 0.0, -2.3117795972581283, 0.1380624842423567],
        0.12: [0.44716904618496645, -1.0584790458580682, -0.5108311916967199, 0.3405541277978132, 0.0, -2.3593344529416065, 0.1380624842423567],
        0.11: [0.4203235631378415, -1.0584790458580682, -0.5115982054980662, 0.41188641132303083, 0.0, -2.403054239618353, 0.1380624842423567],
        0.10: [0.3934780800907166, -1.0584790458580682, -0.5108311916967199, 0.4809176534442092, 0.0, -2.446007012493753, 0.1380624842423567],
        0.09: [0.3666325970435917, -1.0584790458580682, -0.5115982054980662, 0.5461138265586554, 0.0, -2.483590688759728, 0.1380624842423567],
        0.08: [0.33825308639377394, -1.0584790458580682, -0.5115982054980662, 0.6082419444677158, 0.0, -2.5188733236216634, 0.1380624842423567],
        0.07: [0.3106405895453026, -1.0584790458580682, -0.5108311916967199, 0.6665349933700443, 0.0, -2.548786861874174, 0.1380624842423567],
        0.06: [0.2822610788954848, -1.0584790458580682, -0.5108311916967199, 0.721759987066987, 0.0, -2.5740983173186063, 0.1380624842423567],
        0.05: [0.2531145544443206, -1.0584790458580682, -0.5115982054980662, 0.7708488703531582, 0.0, -2.5948076899549593, 0.1380624842423567],
        0.04: [0.22166698858911718, -1.0584790458580682, -0.5108311916967199, 0.8122676156258652, 0.0, -2.6070799107765024, 0.1380624842423567],
        0.03: [0.19021942273391368, -1.0584790458580682, -0.5108311916967199, 0.8475502504878009, 0.0, -2.609380952180542, 0.1380624842423567],
        0.02: [0.15493678787197807, -1.0584790458580682, -0.5108311916967199, 0.8743957335349258, 0.0, -2.602477827968424, 0.1380624842423567],
        0.01: [0.11812012540734962, -1.0584790458580682, -0.5115982054980662, 0.8912700371645471, 0.0, -2.5825354691334166, 0.1380624842423567],
        0.00: [0.07976943534002831, -1.0584790458580682, -0.5108311916967199, 0.8974061475753186, 0.0, -2.5495538756755205, 0.1380624842423567],
        -0.01: [0.03835069006732131, -1.0584790458580682, -0.5108311916967199, 0.8905030233632008, 0.0, -2.501999019992042, 0.1380624842423567],
        -0.02: [-0.0030680552053857046, -1.0584790458580682, -0.5108311916967199, 0.8743957335349258, 0.0, -2.4421719434870206, 0.1380624842423567],
        -0.03: [-0.04832186948482484, -1.0584790458580682, -0.5115982054980662, 0.8475502504878009, 0.0, -2.370839659961803, 0.1380624842423567],
        -0.04: [-0.09357568376426399, -1.0584790458580682, -0.5108311916967199, 0.8122676156258652, 0.0, -2.288002169416389, 0.1380624842423567],
        -0.05: [-0.1411305394477424, -1.0584790458580682, -0.5115982054980662, 0.7693148427504655, 0.0, -2.19979558226155, 0.1380624842423567],
        -0.06: [-0.18715136752852798, -1.0584790458580682, -0.5115982054980662, 0.7202259594642941, 0.0, -2.1031518432919003, 0.1380624842423567],
        -0.07: [-0.23393920941066, -1.0584790458580682, -0.5108311916967199, 0.6657679795686979, 0.0, -2.0026730353155187, 0.1380624842423567],
        -0.08: [-0.27996003749144555, -1.0584790458580682, -0.5108311916967199, 0.6082419444677158, 0.0, -1.8983591583324049, 0.1380624842423567],
        -0.09: [-0.32291281036684544, -1.0584790458580682, -0.5108311916967199, 0.5461138265586554, 0.0, -1.792511253746598, 0.1380624842423567],
        -0.10: [-0.3666325970435917, -1.0584790458580682, -0.5108311916967199, 0.4801506396428628, 0.0, -1.6835952939554053, 0.1380624842423567],
        -0.11: [-0.4080513423162987, -1.0584790458580682, -0.5115982054980662, 0.410352383720338, 0.0, -1.5739123203628664, 0.1380624842423567],
        -0.12: [-0.44640203238362003, -1.0584790458580682, -0.5108311916967199, 0.33978711399646677, 0.0, -1.463462332968981, 0.1372954704410103],
        -0.13: [-0.48321869484824853, -1.0584790458580682, -0.5108311916967199, 0.2638527476631706, 0.0, -1.3514783179724028, 0.1372954704410103],
        -0.14: [-0.518501329710184, -1.0584790458580682, -0.5108311916967199, 0.18638435372718154, 0.0, -1.2387272891744783, 0.1372954704410103],
        -0.15: [-0.5499488955653875, -1.0584790458580682, -0.5108311916967199, 0.10508089078446038, 0.0, -1.1244422327738606, 0.1372954704410103],
        -0.16: [-0.5729593096057803, -1.0584790458580682, -0.5131322331007591, 0.03911770386866773, 0.0, -1.0362356456190218, 0.1372954704410103],
        -0.17: [-0.5729593096057803, -1.0584790458580682, -0.5138992469021055, 0.03911770386866773, 0.0, -1.0362356456190218, 0.1372954704410103],
        -0.18: [-0.6327863861108015, -1.0584790458580682, -0.5100641778953734, -0.15416977407063165, 0.0, -0.7815870635720082, 0.1372954704410103],
        -0.19: [-0.6542627725485015, -1.0584790458580682, -0.5100641778953734, -0.2523475406429742, 0.0, -0.6619329105619658, 0.1372954704410103],
        -0.20: [-0.6719040899794693, -1.0584790458580682, -0.5108311916967199, -0.35512739002339533, 0.0, -0.5407447299492304, 0.1372954704410103],
        -0.21: [-0.6880113798077442, -1.0584790458580682, -0.5108311916967199, -0.46481036361593425, 0.0, -0.415721480329763, 0.1372954704410103],
        -0.22: [-0.7002836006292871, -1.0584790458580682, -0.5108311916967199, -0.5844645166259768, 0.0, -0.2845621202995241, 0.1372954704410103],
        -0.23: [-0.7079537386427514, -1.0584790458580682, -0.5108311916967199, -0.7163908904575621, 0.0, -0.14496560845447454, 0.1372954704410103],
        -0.24: [-0.711021793848137, -1.0584790458580682, -0.5108311916967199, -0.8651915679187687, 0.0, 0.006136110410771409, 0.1372954704410103],
        -0.25: [-0.7064197110400584, -1.0584790458580682, -0.5108311916967199, -1.0423717560297932, 0.0, 0.1787142157137173, 0.1372954704410103]
    }

    y_pos_cm = round(y_pos, 2)
    return lookup_dict[y_pos_cm]

def get_rosbag_data():
    '''
    Extracts position data stored in a rosbag file

    Only needed for testing
    '''
    bag = bagreader('subset_second.bag')
    data_rosbag = bag.message_by_topic('/Goalie_coord')
    data = pd.read_csv(data_rosbag)
    return data

def main():
    '''
    Main is just used to test the above functions
    '''
    data = get_rosbag_data().to_numpy()
    x_data = data[:, 1]
    y_data = data[:, 2]

    n = 10
    x_train = x_data[0:n]
    y_train = y_data[0:n]

    x_goal = -1.27  # As of Nov 21, 8pm
    y_predict = traj_linear_reg(x_train, y_train, x_goal)

    joint_lookup_table(y_predict)

    # plot training data (100% just for testing)
    x_train1 = [0.4534436189076969, 0.44988079150558846, 0.45909087829483586, 0.45825131546988973, 0.46517638453902244, 0.47032162549600487, 0.24195992218879608, 0.22188439802243565, 0.17487694744510485, 0.1437759716291369, 0.08934337425326166, 0.059518005542768315, 0.025693276669413317, -0.02572553101201308, -0.0552515497404239]
    y_train1 = [0.07947684481280115, 0.08031215500612832, 0.09359728204313095, 0.0932132336667128, 0.09471753934324689, 0.0992732932132892, 0.07409491595483542, 0.09369067057726027, 0.09197975222319632, 0.0924821312818998, 0.095502531273223, 0.1016832125226958, 0.09962911094910104, 0.09942891080164173, 0.10144091945782818]
    x_train2 = [0.4452539324576108, 0.4472931299822426, 0.44781107933110564, 0.4607487277861867, 0.45689152782871034, 0.4576060567802376, 0.4550381790137714, 0.20649901539565535, 0.18613273872981945, 0.13342913251862498, 0.11385417479053478, 0.0854010943968817, 0.03829024653482735, 0.03480422246780082, 0.0060798906955899235]
    y_train2 = [0.0781684483276267, 0.07798393902982198, 0.07829538103336159, 0.09310291480954375, 0.0863945398528903, 0.0863592939457859, 0.08472818990882153, 0.06203616157440339, 0.059158337739341205, 0.06327162010009452, 0.06342804693826637, 0.05881157783428065, 0.0586002082161991, 0.05855824643466412, 0.056649620966037983]
    x_train3 = [0.5191170073679476, 0.5182671580632575, 0.513570593362222, 0.5459832597039173, 0.5203229337128485, 0.5245995422304737, 0.5237306586917314, 0.5212833147564826, 0.5211457529577193, 0.5235851456043116, 0.5135184421254391, 0.5085922830072009, 0.5069224657672443, 0.5082158599152623, 0.5004900225768876]
    y_train3 = [-1.0397466684864778, -1.040017765658673, -1.0374592509875975, -0.9907598463750549, -0.8837237048075111, -0.8184329624661328, -0.7546751119626146, -0.7190357399026642, -0.6853757317339926, -0.624627646269637, -0.6236878144226752, -0.5575427997385363, -0.5581991972944781, -0.49786900510339904, -0.4680176339208824]
    x_train4 = [0.5396564310905868, 0.5349533385209811, 0.5416528892373152, 0.5366855132646712, 0.5542083690369541, 0.5149480425551373, 0.5584122771668458, 0.5521907903219022, 0.5503406919966994, 0.5597751508158936, 0.558822038975467, 0.569366130628039, 0.5692860048684844, 0.5676296614706994, 0.565930862154612]
    y_train4 = [-1.1541891842724585, -1.1535787922729044, -1.1548984642581657, -1.1560052765543603, -1.1670402574294716, -1.0336995746004092, -0.9907042125177696, -0.9295142513322656, -0.9005340697692292, -0.8475655986611773, -0.8178324401411163, -0.7625689008786108, -0.7343442481628821, -0.704747185332427, -0.6496053718415915]
    x_train5 = [0.2550474621534302, 0.25415137174174607, 0.2562213389854842, 0.17203920954735696, 0.06256073547959284, 0.0287161920266088, -0.03725224775904107, -0.07841381453622531, -0.1376739766979292, -0.17128717627622536, -0.17193149216946577, -0.17547830251767602, -0.170339137917562, -0.16918324522640527, -0.3954366285241305]
    y_train5 = [0.025353119849605976, 0.025751149482349578, 0.024607215608196342, 0.04930441220385351, 0.034131235144398364, 0.03436830799868229, 0.02890590526892961, 0.03610798030408757, 0.035680091972065786, 0.047652090050981866, 0.04147537549826252, 0.05855775516429401, 0.05582912046276495, 0.05776240887922274, 0.04424897783542969]

    plt.scatter(x_train1, y_train1, color='blue')
    plt.scatter(x_train2, y_train2, color='red')
    plt.scatter(x_train3, y_train3, color='green')
    plt.scatter(x_train4, y_train4, color='yellow')
    plt.scatter(x_train5, y_train5, color='orange')
    plt.xlabel('x position (m)')
    plt.ylabel('y position (m)')
    plt.show()

if __name__ == '__main__':
    main()
