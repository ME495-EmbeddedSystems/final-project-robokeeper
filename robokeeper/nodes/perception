#!/usr/bin/env python

import rospy
from cv_bridge import CvBridge
from sensor_msgs.msg import Image
import cv2

class GetData(object):
    def __init__(self):
        # Initialize CV bridge
        self._bridge = CvBridge()

        # Subscribe to raw color image data from camera
        rospy.Subscriber("/camera/color/image_raw", Image, self.callback)
        # rospy.Subscriber("/camera/depth/image_rect_raw", Image, self.callback) # Use this for depth data

        # Create window for live video feed
        cv2.namedWindow("Image", 1)
    
    def show_img(self, img):
        """ Function to display video """

        # Show video
        cv2.imshow("Image", img)
        cv2.waitKey(3)


    def callback(self,data):
<<<<<<< HEAD
        rospy.logerr('before callback')
        cv_image = self._bridge.imgmsg_to_cv2(data, "bgr8")
        rospy.logerr('callback')
        rospy.logerr(cv_image)
=======
        """ Callback function for camera subscriber """

        # Convert sensor message data to cv2
        cv_image = self._bridge.imgmsg_to_cv2(data, "passthrough")

        # Convert to RGB
        cv_image = cv2.cvtColor(cv_image, cv2.COLOR_BGR2RGB)
        
        # Output pixel values
        print(cv_image)

        # Show center pixel depth when subscribing to depth data
        # print(cv_image[240][424][2])
>>>>>>> cody/feature

        # Display live video feed
        self.show_img(cv_image)


if __name__=="__main__":
    rospy.init_node("perception")
    c = GetData()
    rospy.spin()
